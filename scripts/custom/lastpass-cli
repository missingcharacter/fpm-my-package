#!/usr/bin/env bash
# Enable bash's unofficial strict mode
GITROOT=$(git rev-parse --show-toplevel)
export GITROOT
# shellcheck source=scripts/custom/lastpass-cli
. "${GITROOT}/scripts/lib/strict-mode"
strictMode
# shellcheck source=scripts/custom/lastpass-cli
. "${GITROOT}/scripts/lib/utils"
# We source asdf to ensure that the correct version of fpm is used
# Also, this script should only be run inside the container
# shellcheck source=/dev/null
. "${HOME}/.asdf/asdf.sh"

PACKAGES_YAML="${1}"
PACKAGE_INDEX="${2}"
SRC_DIR="${3}"

NAME="$(yq e ".packages[${PACKAGE_INDEX}].name" "${PACKAGES_YAML}")"
VERSION="$(yq e ".packages[${PACKAGE_INDEX}].version" "${PACKAGES_YAML}")"
RELEASE="$(yq e ".packages[${PACKAGE_INDEX}].release" "${PACKAGES_YAML}")"
SOURCE="$(yq e ".packages[${PACKAGE_INDEX}].source" "${PACKAGES_YAML}")"
MAINTAINER="$(yq e ".packages[${PACKAGE_INDEX}].maintainer" "${PACKAGES_YAML}")"
LICENSE="$(yq e ".packages[${PACKAGE_INDEX}].license" "${PACKAGES_YAML}")"
DESCRIPTION="$(yq e ".packages[${PACKAGE_INDEX}].description" "${PACKAGES_YAML}")"
ARCH="$(get_arch)"

#==== Start of custom build steps ====
cd "${SRC_DIR}/lastpass-cli-${VERSION}" || exit

export ASDF_PYTHON_VERSION='system'
make
make install DESTDIR=/opt
make install-doc DESTDIR=/opt
unset ASDF_PYTHON_VERSION
#===== End of custom build steps =====

declare -a RPM_DEPS=()
declare -a DEB_DEPS=()

while IFS= read -r dep; do
  if [[ -n ${dep} ]]; then
    RPM_DEPS+=('-d' "${dep}")
  fi
done < <(yq e ".packages[${PACKAGE_INDEX}].rpm_dependencies[]" "${PACKAGES_YAML}")

while IFS= read -r dep; do
  if [[ -n ${dep} ]]; then
    DEB_DEPS+=('-d' "${dep}")
  fi
done < <(yq e ".packages[${PACKAGE_INDEX}].deb_dependencies[]" "${PACKAGES_YAML}")

declare -a FPM_OPTS=(
  'fpm' '-s' 'dir' '-n' "${NAME}" '-v' "${VERSION}" '--license' "${LICENSE}"
  '-a' 'native' '--url' "${SOURCE}" '--iteration' "${RELEASE}"
  '-m' "${MAINTAINER}" '--description' "${DESCRIPTION}"
)
declare -a RPM_OPTS=("${FPM_OPTS[@]}" '-t' 'rpm' "${RPM_DEPS[@]}"
  '/opt/usr/=/usr/local')
declare -a DEB_OPTS=("${FPM_OPTS[@]}" '-t' 'deb' "${DEB_DEPS[@]}"
  '--deb-no-default-config-files' '/opt/usr/=/usr/local')

msg_info "Creating RPM"

"${RPM_OPTS[@]}"

rpm -qpi "${NAME}-${VERSION}-${RELEASE}.$(uname -m).rpm"

msg_info "Moving RPM to tmp-files/RPM/"

mv "${NAME}-${VERSION}-${RELEASE}.$(uname -m).rpm" /data/tmp-files/RPM/

msg_info "Creating DEB"

"${DEB_OPTS[@]}"

dpkg-deb -I "${NAME}_${VERSION}-${RELEASE}_${ARCH}.deb"

msg_info "Moving DEB to tmp-files/DEB/"

mv "${NAME}_${VERSION}-${RELEASE}_${ARCH}.deb" /data/tmp-files/DEB/
