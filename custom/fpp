#!/usr/bin/env bash
# Enable bash's unofficial strict mode
GITROOT=$(git rev-parse --show-toplevel)
export GITROOT
. "${GITROOT}/lib/strict-mode"
strictMode

THIS_SCRIPT=$(basename "${0}")

SRC_DIR="/data/${THIS_SCRIPT}"

cd "${SRC_DIR}/PathPicker-0.9.2/debian/"
# OVERRIDE='cd /data/fpp/PathPicker-0.9.2/debian/ && ./package.sh && mv ../fpp_*_noarch.deb /data/built-packages/DEB/'
#==== Start of custom build steps ====

PTH="$(pwd)"
DATETIME=$(date '+%a, %d %b %Y %H:%M:%S %z')

mkdir -p "${PTH}/usr/local/bin" &&
  mkdir -p "${PTH}/usr/local/share/pathpicker/src/"

mv "${PTH}/usr/share/doc" "${PTH}/usr/local/share/" &&
  mv "${PTH}/usr/share/man" "${PTH}/usr/local/share/" &&
  rmdir "${PTH}/usr/share" &&
  cp -R "${PTH}/../src" "${PTH}/usr/local/share/pathpicker" &&
  cp "${PTH}/../fpp" "${PTH}/usr/local/share/pathpicker/fpp" &&
  cd "${PTH}/usr/local/bin/"

echo "Creating symlink..."
ln -f -s ../share/pathpicker/fpp fpp
sed s#__version__#"${VERSION}"# < "${PTH}/usr/local/share/doc/pathpicker/changelog" > "${PTH}/usr/local/share/doc/pathpicker/changelog.modif"
sed s#__date_timestamp__#"${DATETIME}"# < "${PTH}/usr/local/share/doc/pathpicker/changelog.modif" > "${PTH}/usr/local/share/doc/pathpicker/changelog"

echo "Gziping..."
gzip -9 "${PTH}/usr/local/share/doc/pathpicker/changelog" &&
  rm "${PTH}/usr/local/share/doc/pathpicker/changelog.modif"

echo "Setting permissions..."
cd "${PTH}"
find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;

rm "${PTH}/package.sh"
rm -rf "${PTH}/DEBIAN" "${PTH}/usr/share"
chmod 755 usr/local/share/pathpicker/fpp
chown -R root: "${PTH}/"

#===== End of custom build steps =====

function msg_info () {
  local GREEN=$'\033[0;32m'
  local NC=$'\033[0m' # No Color
  printf "%s\n" "${GREEN}${*}${NC}"
}

function msg_error () {
  local LRED=$'\033[01;31m'
  local NC=$'\033[0m' # No Color
  printf "%s\n" "${LRED}${*}${NC}"
}

msg_info "Debian dependencies are ${DEB_DEPENDENCIES}"
msg_info "RPM dependencies are ${RPM_DEPENDENCIES}"

DEB_DEPS=""
IFS=','
for i in $(echo "${DEB_DEPENDENCIES}"); do
  DEB_DEPS="${DEB_DEPS}-d '${i}' "
done
IFS=$'\n\t'

RPM_DEPS=""
IFS=','
for i in $(echo "${RPM_DEPENDENCIES}"); do
  RPM_DEPS="${RPM_DEPS}-d '${i}' "
done
IFS=$'\n\t'

msg_info "Creating RPM"

RPM_OPTS="fpm -s dir -t rpm -n '${NAME}' -v '${VERSION}' --license '${LICENSE}' -a all --url '${SOURCE}' --iteration '${RELEASE}' ${RPM_DEPS} -m '${MAINTAINER}' --description '${DESCRIPTION}' ${PTH}/=/"
eval "${RPM_OPTS}"

rpm -qpi "${NAME}-${VERSION}-${RELEASE}.noarch.rpm"

msg_info "Moving RPM to built-packages/RPM/"

mv "${NAME}-${VERSION}-${RELEASE}.noarch.rpm" /data/built-packages/RPM/

msg_info "Creating DEB"

DEB_OPTS="fpm -s dir -t deb -n '${NAME}' -v '${VERSION}' --license '${LICENSE}' -a all --url '${SOURCE}' --deb-use-file-permissions --deb-no-default-config-files --iteration '${RELEASE}' ${DEB_DEPS} -m '${MAINTAINER}' --description '${DESCRIPTION}' ${PTH}/=/"
eval "${DEB_OPTS}"

dpkg-deb -I "${NAME}_${VERSION}-${RELEASE}_all.deb"

msg_info "Moving DEB to built-packages/DEB/"

mv "${NAME}_${VERSION}-${RELEASE}_all.deb" /data/built-packages/DEB/
